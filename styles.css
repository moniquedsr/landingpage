
/*  o comando *{ seleciona tudo */

/*
index 10
h1, p{
    color: rgb(151, 93, 151)
}

body div section p,
body div section h1{
    color: red;
} */


/*

index 11
.color-red {
    color:red
}

body.error div.main-content  h2.heading {
    font-style: italic;
    color:red;
}

div {
    color: initial;
    margin-left: 20px;
}

.pai > .filha > .filha{
    color:red;
}

/* esse > é o seletor de filho, não pode ter nada dividindo elas
como um span ou uma div */



/*[meu-atributo~="valor1"] {
    color: red
}
*/

/*[meu-atributo |="qualquercoisa"] {
    color: red
}
*/

/*[meu-atributo^="c"] {
    color: red
}
^ significa começa com  tem também 
o termina com que usa o símbolo $
[meu-atributo$="1111"] {
    color: red;
}
o símbolo * significa contém 
[meu-atributo*="1"] {
    color: red;
}

*/

/* index 12

.pai .um + .dois {
    color: red;
}
[meu-atributo*="1"] {
    color: red;
}



[checked] {
    width: 50px;
    height: 50px;
    color: red
}



/* + o sinal de mais significa adjacent 
sibiling selector (seleciona todo elemento 
depois do que você selecionou no comando)

tem outro selector que se chama ~ general
sibiling selector, este seleciona todos os 
elementos após o comando escrito
| significa que você quer achar um valor que tenha - valor-a



.heading:hover {
    background: skyblue;
}

.heading{
    transition: all 600ms ease-in-out;
}

a{
color: tomato; /* todos os links
}

a:link {
    color:deeppink
} link não visitados

a:visited {
    color:firebrick;
} links visitados

/*
a:hover {
    background: darkorchid;
    color: white;
    text-decoration: none;
    transition: all ease-in 600ms;
} 
a:active {
    background: darkslategrey;
    color: white;
    text-decoration: none;
    transition: all ease-in 600ms;
}

input:checked + p{
    background: coral;
    }

input:not(:checked) + p{
    background: yellowgreen;
    }

.pai .lista li:first-child {
    background: cornflowerblue;
}

input:required {
    background: cyan;
    color: darkgrey;
}

p:not(.meio){
    color:darkred;

}

ul li:nth-child(odd){
    background: violet;
}

ul li:nth-child(even){
    background: deepskyblue;
   
}
ul li:nth-child(3n){ /* de três em três
    background: blue;
}

ul li:nth-child(3n + 5){ /* de três em três
    background: none; /* quer dizer que o primeiro 
    vai ser no quinto e depois de três em três 
}
/*
input:focus {
    box-shadow: 0 0 10px rgba(0 ,0 ,0, 0.8);
    outline: none;
    border: 1 px solid black;
}

input:enabled {
    background-color: chartreuse;
    cursor: not-allowed;

}

ul li::after{
    content: '-';
    background: dimgray;
    color: floralwhite;
  

} /* para adicionar um elemento depois do 
conteúdo e para antes se usa o before 
p::first-letter {
    font-size: 25px;
} 
p::first-line{
    background: lemonchiffon;
}

p::selection {
    background: lightcoral;
    color: whitesmoke;
}

.form-field::placeholder{
   color: teal; 
}

/*
LISTA DE PRIORIDADES:
1-ID
2-CLASS, ATRIBUTOS E PSEUDO CLASS
3-ELEMENTS E PSEUDO ELEMENTS
obs: o atributo style é o mais forte
(só não ganha do !important)
obs2: se você usar !important ele passa
a ser mais forte
*/
/*
#p {
    background: turquoise;
}
.p {
    background: violet;
}
*/
*{
    margin: 0;
    padding:0;
    box-sizing: border-box;
}
:root{
    --primary-color: #0a1128;
    --darkblue-color: #00025a;
    --white-color: #ffffff;
    --light-grey-color: #1080ac;
    --secondary-color: #f83597;
    --light-yellow-color: #fffb02;
    --gap: 3rem;
}
html {
    font-size: 62.5%;
    scroll-behavior: smooth;
}
body{
    font-family:'Open sans', sans-serif ;
    font-size: 2rem;
    line-height: 1.5;
}
h1, h2, h3, h4, h5, h6 {
   font-family: 'Montserrat', sans-serif; 
}
h1 {
    font-size: 6rem;
    text-transform: uppercase;
}
h2 {
    font-size: 5.5rem;
    line-height: 1.2;
    margin-bottom: 4rem;
    text-transform: uppercase;
    
    
}
h3 {
    font-size: 5rem;
   
}
h4 {
    font-size: 4.5rem;
    
}
h5 {
    font-size: 4rem;
    
}
h6 {
    font-size: 3.5rem;
    
}
a {
    text-decoration: none;
}
p{
    margin-bottom: 3rem;
}
.main-bg{
    background-image: url('../img/bg.svg');
    background-size:cover;
    background-position: center center ;
    color: var(--light-grey-color);
}
.white-bg{
    background-size:cover;
    background-position: center center;
    background: var(--white-color);
    color: var(--darkblue-color);
    
}
.main-content{
max-width: 120vh;
margin: 0 auto;
padding: 10rem var(--gap);
}
.section{
    min-height: 100vh;
}
.menu-spacing {
   height: 6.5rem;
}
.menu{
    background: var(--white-color);
    position: fixed;
    top:0;
    left: 0;
    right: 0;
    width: 100%;
    z-index: 2;
    border-bottom: 0.1rem solid var(--light-grey-color);
}
.menu-content{
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-top: 0;
    padding-bottom: 0;
}
.menu h1{
    font-size: 2.3rem;
    color: var(--primary-color)
}
.menu h1 a{
    color: inherit;
}
.menu ul{
    list-style: none;
    display: flex;
}
.menu ul li a{
    display: block;
    padding: 1.5rem;
    font-size: 1.8rem;
    position: relative;
}
.menu ul li a::after{
    content: '';
    position: absolute;
    bottom: 1rem;
    left: 50%;
    width: 0;
    min-height: 0.2rem ;
    background: var(--secondary-color); 
    transition: all 300ms ease-in-out;  
}
.menu ul li a:hover::after{
    width: 50%;
    left: 25%;
}
.contact-content{
    position: relative;
    display:grid;
    grid-template-columns: 1fr 1.5fr;
    gap: var(--gap);
    justify-content: stretch;
    min-height: 100vh;
}
.intro-content{
    top:-7rem;
    position: relative;
    display:grid;
    grid-template-columns: 1fr 1.5fr;
    gap: var(--gap);
    justify-content: stretch;
    min-height: 100vh;
}
.intro-text-content, .intro-img{
    display: flex;
    flex-flow: column wrap;
    justify-content: center;
    
}  

.intro-img img,
.intro-img svg{
    max-width: 100%;
    min-height: auto;
    
}
.top3-content{
    max-width: 100%;
    min-height: 100vh;
    width: 100vh;
    display: flex;
    /*flex-flow: column wrap;*/
    flex-direction: column;
    flex-wrap: nowrap;
    justify-content: center;
    text-align: center;
}

.grid-one-content{
    display:flex;
    /*flex-flow: column wrap*/
    flex-direction:column;
    flex-wrap: nowrap;
    justify-content: center; 
    min-height: 100vh ;

    
}
.grid{
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: var(--gap);
    counter-reset: grid-counter;
}
.grid-main-heading {
  margin-bottom: 1rem;  
}
.grid-description {
    padding-bottom: 4rem;
}

.grid h3{
    font-size: 3rem;
    position: relative;
    padding-left: 5rem;
    padding-bottom: 2rem;
    
}
.grid h3::before {
    font-size: 8rem;
    counter-increment: grid-counter;
    content: counter(grid-counter);
    position: absolute;
    font-size: 8rem;
    font-style: italic;
    top:-4rem;
    left: -2rem;
    transform: rotate(5deg);
}
.gallery-img{
    width: 100%;
    max-width: 36rem;
    max-height: 36rem;
    overflow: hidden;
    margin-bottom: 3rem;
    
}
.gallery-img img{
    transition: all 300ms ease-in-out;
    
}
.gallery-img img:hover{
    transform: translate(-3%,3%) scale(1.2) rotate(5deg);
}
.responsive-table {
    overflow:hidden;
    overflow-x: auto;
}
table{
   min-width: 360px;
   width:100%; 
   border-collapse: collapse;
}
table caption{
    font-style: italic;
    font-size: 1.6rem;
    text-align: left;
    margin-bottom: 0.7rem;
}
table td, table th {
    white-space: nowrap;
    padding:1rem;
    text-align: left;
    border:0.1rem solid var(--darkblue-color);
    
}
tfoot td, tfoot th {
    background: var(--light-grey-color);
}
.contact-form{
  grid-column: span 2;  
}

.contact-form .form-grid {
    border: none;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: 5rem;
    box-sizing: border-box;
    width: 80%;
    padding-left: 20%;
}
.form-grid legend{
    font-style: italic;
    font-size: 1.6rem;
    margin-bottom: 3rem;
}
.form-group{
    flex-grow: 1 1 320px;
}

.form-group label{
    display: block; 
    margin-bottom: 1rem;   
}

.form-group input,
.form-group textarea {
    border: none;
    background: var(--white-color);
    padding: 1.5rem 2rem;
    width: 100%;
    font-size: 3rem;
    outline: none;
}
body .full-width{
    width: 100%;
    flex-grow: 1 1 100%;
    padding-bottom: 1rem;
}

.form-group button {
    border: 0.5rem solid var(--white-color);
    background: none;
    color:var(--white-color);
    padding: 2rem;
    font-size: 2rem;
    cursor: pointer;
    transition: all 300ms ease-in-out;
}
.form-group button:hover {
    background: var(--white-color); 
    color: var(--darkblue-color);
}
.form-group  ::placeholder{
    color: lightgrey;
}
.form-group input:focus,
.form-group textarea:focus {
    box-shadow: 0 0 15px 2px var(--secondary-color);
}
.footer{
    text-align: center;
    font-size: 1.6rem;
   
}
.footer p {
    margin: 0;
    padding-top:1rem;
    
}
.footer a {
    color: var(--darkblue-color);
}

.close-menu{
    display: none;
}
.back-to-top{
    position: fixed;
    bottom: 2rem;
    right: 2rem;
    background: var(--white-color);
    width: 5rem;
    height: 5rem;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 50%;
    color: var(--darkblue-color);
    border: 0.1rem solid var(--primary-color);
}

@media (max-width: 800px){
.intro-content, .grid {
    grid-template-columns: 1fr;
    }
.gallery-img{
    max-width: 1fr;
    max-height: 1fr;
}
.gallery-img img{
    max-width: 100%;
    max-height: 90%;
}
.grid-one-content{
    display: block;
}
.menu {
    bottom: 0;
    text-align: center;
}
.menu-content, .menu-content ul{
    flex-direction: column;
    justify-content: center;
}
.menu-content {
    height: 100vh;
}
.menu{
    display: none;
}

.close-menu-label::after{
    content: '≡';
    position: fixed;
    z-index: 3;
    top:2rem;
    right:2rem;
    background: var(--darkblue-color);
    color: white;
    font-size: 3rem;
    line-height: 3rem;
    width: 3rem;
    height: 3rem;
    text-align: center;
    padding:0.5rem;
    cursor: pointer;
 } 
 .close-menu:checked~.menu{
   display: block;
 }
 .close-menu:checked~.close-menu-label::after{
    content:'×';
      }
 .menu-spacing {
    display: none;
      }
}